{"remainingRequest":"/home/kelvintan/Documents/fridays/suaraBackend/suara-backend/node_modules/babel-loader/lib/index.js!/home/kelvintan/Documents/fridays/suaraBackend/suara-backend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/kelvintan/Documents/fridays/suaraBackend/suara-backend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kelvintan/Documents/fridays/suaraBackend/suara-backend/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kelvintan/Documents/fridays/suaraBackend/suara-backend/src/App.vue","mtime":1588926749727},{"path":"/home/kelvintan/Documents/fridays/suaraBackend/suara-backend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kelvintan/Documents/fridays/suaraBackend/suara-backend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/kelvintan/Documents/fridays/suaraBackend/suara-backend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kelvintan/Documents/fridays/suaraBackend/suara-backend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- Data:\n    <div v-for=\"user in users\" :key=\"user.name\">\n      {{ user }}\n    </div>\n    <h1>{{ users }}</h1>\n    <br />\n    <br /> -->\n    <div style=\"text-align:center\">\n      <img :src=\"userPic\" style=\"max-height: 50vh\" />\n      <span style=\"font-size: 300%; position: relative; bottom: 25vh\">{{\n        userIntro\n      }}</span>\n    </div>\n    <h1>User info</h1>\n    <h3>Name: {{ userName }}</h3>\n    <h3>Age: {{ userAge }}</h3>\n    <h3>Gender: {{ userGender }}</h3>\n    <h3>NRIC: {{ userIC }}</h3>\n    <h3>\n      User type:\n      <span v-if=\"userMP\">MP</span>\n      <span v-else>Non-MP</span>\n      <button>Change user type</button>\n    </h3>\n    <h3>\n      Email:\n      <input type=\"email\" v-model=\"userEmail\" />\n      <button @click=\"updateEmail\">Change email</button>\n    </h3>\n    <h3>\n      Phone number:\n      <input type=\"tel\" v-model=\"userPhone\" />\n      <button @click=\"updatePhone\">Change number</button>\n    </h3>\n    {{ updatedUser }}\n    <!-- Name: <input v-model=\"targetName\" /> Age:\n    <input v-model.number=\"targetAge\" />\n    <div>\n      Data:\n      {{ updatedUser }}\n    </div>\n    <button @click=\"updateAge\">Update user</button> -->\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"app\",\n  data() {\n    return {\n      /* ... */\n      name: \"\",\n      targetName: \"\",\n      users: [],\n      userSearch: {},\n      targetAge: \"\",\n      updatedUser: {},\n      userName: \"\",\n      userPic: \"\",\n      userIntro: \"\",\n      userEmail: \"\",\n      userPhone: \"\",\n      userIC: \"\",\n      userGender: \"\",\n      userMP: \"\",\n      userAge: \"\",\n    };\n  },\n\n  beforeMount() {\n    this.getUserByName();\n  },\n  methods: {\n    // async getUsers() {\n    //   const res = await axios.post(\"http://localhost:4000/graphql\", {\n    //     query: `{\n    //       getUsers {\n    //         name\n    //         email\n    //         isMP\n    //         phone\n    //         IC\n    //         profPic\n    //         intro\n    //         gender\n    //         age\n    //         ADUN\n    //         isPrivate\n    //       }\n    //     }`,\n    //   });\n    //   this.users = res.data.data;\n    // },\n    async getUserByName() {\n      const res = await axios.post(\"http://localhost:4000/graphql\", {\n        query: `\n      query GetUserByName($userName: String!) {\n        getUserByName(name: $userName) {\n            name\n            email\n            isMP\n            phone\n            IC\n            profPic\n            intro\n            gender\n            age\n            ADUN\n            isPrivate\n        }\n      }`,\n        variables: {\n          userName: \"Ali\",\n        },\n      });\n      this.userSearch = res.data.data.getUserByName;\n      this.userName = res.data.data.getUserByName.name;\n      this.userPic = res.data.data.getUserByName.profPic;\n      this.userIntro = res.data.data.getUserByName.intro;\n      this.userAge = res.data.data.getUserByName.age;\n      this.userEmail = res.data.data.getUserByName.email;\n      this.userPhone = res.data.data.getUserByName.phone;\n      this.userIC = res.data.data.getUserByName.IC;\n      this.userGender = res.data.data.getUserByName.gender;\n      this.userMP = res.data.data.getUserByName.isMP;\n    },\n    async updateAge() {\n      const res = await axios.post(\"http://localhost:4000/graphql\", {\n        query: `\n        mutation UpdateAge(\n          $userName: String!,  $age: Int) {\n          updateAge(name: $userName, age: $age) {\n            name\n            age\n          }\n        }`,\n        variables: {\n          userName: this.targetName,\n          age: this.targetAge,\n        },\n      });\n      this.updatedUser = res.data.data.updateAge;\n    },\n    async updateEmail() {\n      const res = await axios.post(\"http://localhost:4000/graphql\", {\n        query: `\n        mutation UpdateEmail(\n          $userName: String!,  $email: String) {\n          updateEmail(name: $userName, email: $email) {\n            name\n            email\n          }\n        }`,\n        variables: {\n          userName: this.userName,\n          email: this.userEmail,\n        },\n      });\n      this.updatedUser = res.data.data.updateEmail;\n    },\n    async updatePhone() {\n      const res = await axios.post(\"http://localhost:4000/graphql\", {\n        query: `\n        mutation UpdatePhone(\n          $userName: String!,  $phone: String) {\n          updatePhone(name: $userName, phone: $phone) {\n            name\n            phone\n          }\n        }`,\n        variables: {\n          userName: this.userName,\n          phone: this.userPhone,\n        },\n      });\n      this.updatedUser = res.data.data.updatePhone;\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src"}]}