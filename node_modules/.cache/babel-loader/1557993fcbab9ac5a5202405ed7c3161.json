{"remainingRequest":"/home/kelvintan/Documents/fridays/suaraBackend/suara-backend/node_modules/babel-loader/lib/index.js!/home/kelvintan/Documents/fridays/suaraBackend/suara-backend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/kelvintan/Documents/fridays/suaraBackend/suara-backend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kelvintan/Documents/fridays/suaraBackend/suara-backend/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kelvintan/Documents/fridays/suaraBackend/suara-backend/src/App.vue","mtime":1588913310819},{"path":"/home/kelvintan/Documents/fridays/suaraBackend/suara-backend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kelvintan/Documents/fridays/suaraBackend/suara-backend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/kelvintan/Documents/fridays/suaraBackend/suara-backend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kelvintan/Documents/fridays/suaraBackend/suara-backend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n    Data:\n    <div v-for=\"user in users\" :key=\"user.name\">\n      {{ user }}\n    </div>\n    <button @click=\"getUsers\">Get users</button>\n    <br />\n    <br />\n    <input v-model=\"name\" />\n    Data:\n    {{ userSearch }}\n    <button @click=\"getUserByName\">Get user</button>\n    <br />\n    <br />\n    Name: <input v-model=\"targetName\" /> Age:\n    <input v-model.number=\"targetAge\" />\n    <div>\n      Data:\n      {{ updatedUser }}\n    </div>\n    <button @click=\"updateAge\">Update user</button>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"app\",\n  data() {\n    return {\n      /* ... */\n      champions: [],\n      championSearch: {},\n      name: \"\",\n      targetName: \"\",\n      targetAttack: \"\",\n      updatedChampion: {},\n      users: [],\n      userSearch: {},\n      targetAge: \"\",\n      updatedUser: {},\n    };\n  },\n  methods: {\n    /* ... */\n    async getChampions() {\n      const res = await axios.post(\"http://localhost:4000/graphql\", {\n        query: `{\n          getChampions {\n            name\n            attackDamage\n          }\n        }`,\n      });\n      this.champions = res.data.data;\n    },\n    async getChampionByName() {\n      const res = await axios.post(\"http://localhost:4000/graphql\", {\n        query: `\n      query GetChampionByName($championName: String!) {\n        getChampionByName(name: $championName) {\n          name\n          attackDamage\n        }\n      }`,\n        variables: {\n          championName: \"Ashe\",\n        },\n      });\n      this.championSearch = res.data.data.getChampionByName;\n    },\n    async updateAttackDamage() {\n      const res = await axios.post(\"http://localhost:4000/graphql\", {\n        query: `\n        mutation UpdateAttackDamage(\n          $championName: String!,  $attackDamage: Float) {\n          updateAttackDamage(name: $championName, attackDamage: $attackDamage) {\n            name\n            attackDamage\n          }\n        }`,\n        variables: {\n          championName: this.targetName,\n          attackDamage: this.targetAttack,\n        },\n      });\n      this.updatedChampion = res.data.data.updateAttackDamage;\n    },\n    async getUsers() {\n      const res = await axios.post(\"http://localhost:4000/graphql\", {\n        query: `{\n          getUsers {\n            name\n            email\n            isMP\n            mobNum\n            IC\n            profPic\n            intro\n            gender\n            age\n            ADUN\n            isPrivate\n          }\n        }`,\n      });\n      this.users = res.data.data;\n    },\n    async getUserByName() {\n      const res = await axios.post(\"http://localhost:4000/graphql\", {\n        query: `\n      query GetUserByName($userName: String!) {\n        getUserByName(name: $userName) {\n            name\n            email\n            isMP\n            mobNum\n            IC\n            profPic\n            intro\n            gender\n            age\n            ADUN\n            isPrivate\n        }\n      }`,\n        variables: {\n          userName: \"Ali\",\n        },\n      });\n      this.userSearch = res.data.data.getUserByName;\n    },\n    async updateAge() {\n      const res = await axios.post(\"http://localhost:4000/graphql\", {\n        query: `\n        mutation UpdateAge(\n          $userName: String!,  $attackDamage: Float) {\n          updateAge(name: $userName, attackDamage: $attackDamage) {\n            name\n            attackDamage\n          }\n        }`,\n        variables: {\n          userName: this.targetName,\n          age: this.targetAge,\n        },\n      });\n      this.updatedUser = res.data.data.updateAge;\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src"}]}